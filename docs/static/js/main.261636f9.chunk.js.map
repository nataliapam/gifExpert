{"version":3,"sources":["components/AddCategory.js","components/AdvancedGridList.js","helpers/getGifs.js","components/GifElements.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","category","inputValue","setInputValue","onSubmit","e","preventDefault","handleAdd","type","id","value","onChange","target","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","transform","titleBar","icon","color","AdvancedGridList","images","classes","className","GridList","cellHeight","spacing","map","tile","GridListTile","cols","featured","rows","src","img","alt","title","GridListTileBar","titlePosition","actionIcon","IconButton","aria-label","actionPosition","getGifs","a","url","fetch","resp","json","data","gifs","downsized_medium","console","log","GifElements","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","length","el","ReactDOM","render","document","getElementById"],"mappings":"sMA8BeA,EA3BK,SAACC,GAAW,IAAD,EACOC,mBAASD,EAAME,UADtB,mBACtBC,EADsB,KACVC,EADU,KAW7B,OACE,sBAAMC,SANa,SAACC,GACpBA,EAAEC,iBACFP,EAAMQ,UAAUL,GAChBC,EAAc,KAGd,SACE,uBACEK,KAAK,OACLC,GAAG,cACHC,MAAOR,EACPS,SAfe,SAACN,GACpBF,EAAcE,EAAEO,OAAOF,a,yDCErBG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVC,gBAAiBN,EAAMO,QAAQC,WAAWC,OAE5CC,SAAU,CACRC,MAAO,IACPC,OAAQ,IAERC,UAAW,iBAEbC,SAAU,CACRN,WACE,2FAGJO,KAAM,CACJC,MAAO,aAsBI,SAASC,EAAT,GAAuC,IAAXC,EAAU,EAAVA,OACnCC,EAAUrB,IAEhB,OACE,qBAAKsB,UAAWD,EAAQlB,KAAxB,SACE,cAACoB,EAAA,EAAD,CAAUC,WAAY,IAAKC,QAAS,EAAGH,UAAWD,EAAQT,SAA1D,SACGQ,EAAOM,KAAI,SAACC,GAAD,OACV,eAACC,EAAA,EAAD,CAEEC,KAAMF,EAAKG,SAAW,EAAI,EAC1BC,KAAMJ,EAAKG,SAAW,EAAI,EAH5B,UAKE,qBAAKE,IAAKL,EAAKM,IAAKC,IAAKP,EAAKQ,QAC9B,cAACC,EAAA,EAAD,CACED,MAAOR,EAAKQ,MACZE,cAAc,MACdC,WACE,cAACC,EAAA,EAAD,CACEC,aAAA,eAAoBb,EAAKQ,OACzBb,UAAWD,EAAQJ,KAFrB,SAIE,cAAC,IAAD,MAGJwB,eAAe,OACfnB,UAAWD,EAAQL,aAjBhBW,EAAK/B,W,6BC1DT8C,EAAO,uCAAG,WAAOtD,GAAP,uBAAAuD,EAAA,6DACfC,EACJ,mFACAxD,EACA,YAJmB,kBAMAyD,MAAMD,GANN,cAMbE,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKtB,KAAI,SAACO,GACrB,MAAO,CACLrC,GAAIqC,EAAIrC,GACRuC,MAAOF,EAAIE,MACXF,IAAKA,EAAIb,OAAO8B,iBAAiBN,IACjCd,UAAU,MAdK,kBAiBZmB,GAjBY,kCAqBnBE,QAAQC,IAAR,MArBmB,0DAAH,sDCqBLC,EAjBK,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SAAe,ECFV,SAACA,GAAc,IAAD,EACdD,mBAAS,CACjC6D,KAAM,GACNM,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KASxC,OAJAC,qBAAU,WACRf,EAAQtD,GAAUsE,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAER,KAAMW,EAAML,SAAS,SAChE,CAAClE,IAEGmE,EDNmBK,CAAaxE,GAA/B4D,EAD4B,EAC5BA,KAAMM,EADsB,EACtBA,QACd,OACE,qCACE,6BAAKlE,IACJkE,GACC,mBAAGhC,UAAU,mCAAb,wBAEF,cAACH,EAAD,CAAkBC,OAAQ4B,QEgBjBa,EAxBM,SAAC3E,GAAW,IAAD,EACMC,mBAAS,CAAC,eADhB,mBACvB2E,EADuB,KACXC,EADW,KAS9B,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAarE,UAVI,SAACG,GAChBA,EAAMmE,OAAS,GAEjBD,EAAc,CAAClE,KAOuBT,SAAU0E,IAEhD,6BACGA,EAAWpC,KAAI,SAACuC,GACf,OAAO,cAAC,EAAD,CAAsB7E,SAAU6E,GAAdA,YChBnCC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.261636f9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = (props) => {\r\n  const [inputValue, setInputValue] = useState(props.category);\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleAdd(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        id=\"addCategory\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  handleAdd: PropTypes.func,\r\n};\r\n\r\nexport default AddCategory;\r\n/*<button onClick={() => props.handleAdd(inputValue)}>Add Category</button>*/\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\",\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\r\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     featured: true,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function AdvancedGridList({ images }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\r\n        {images.map((tile) => (\r\n          <GridListTile\r\n            key={tile.id}\r\n            cols={tile.featured ? 2 : 1}\r\n            rows={tile.featured ? 2 : 1}\r\n          >\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              titlePosition=\"top\"\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`star ${tile.title}`}\r\n                  className={classes.icon}\r\n                >\r\n                  <StarBorderIcon />\r\n                </IconButton>\r\n              }\r\n              actionPosition=\"left\"\r\n              className={classes.titleBar}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url =\r\n    \"https://api.giphy.com/v1/gifs/search?api_key=KCDBakFHx67sZY3ZogVnudMlcvHtOg7t&q=\" +\r\n    category +\r\n    \"&limit=10\";\r\n  try {\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        img: img.images.downsized_medium.url,\r\n        featured: true,\r\n      };\r\n    });\r\n    return gifs;\r\n    //  setImages(gifs);\r\n    //zconsole.log(gifs);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AdvancedGridList from \"./AdvancedGridList\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nconst GifElements = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n      <AdvancedGridList images={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nGifElements.propTypes = {\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default GifElements;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }));\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifElements from \"./components/GifElements\";\r\n\r\nconst GifExpertApp = (props) => {\r\n  const [categories, setCategories] = useState([\"Chinchilla\"]);\r\n\r\n  const handleSubmit = (value) => {\r\n    if (value.length > 2) {\r\n      //setCategories([...categories, value]);\r\n      setCategories([value]);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <AddCategory handleAdd={handleSubmit} category={categories} />\r\n\r\n      <ol>\r\n        {categories.map((el) => {\r\n          return <GifElements key={el} category={el} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
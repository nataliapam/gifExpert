{"version":3,"sources":["components/AddCategory.js","components/GifElement.js","helpers/getGifs.js","components/GifElements.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","AddCategory","props","classes","useState","category","inputValue","setInputValue","Paper","component","className","onSubmit","e","preventDefault","handleAdd","InputBase","id","placeholder","onChange","target","value","inputProps","variant","IconButton","type","aria-label","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","GifElement","img","React","expanded","setExpanded","Card","style","minHeight","margin","CardHeader","Avatar","action","title","CardMedia","image","height","CardContent","detail","Typography","color","href","original","rel","Button","size","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","source","getGifs","a","url","fetch","resp","json","data","gifs","map","images","fixed_height","source_post_url","substr","toUpperCase","console","log","GifElements","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","length","el","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f19e49d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nconst AddCategory = (props) => {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = useState(props.category);\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleAdd(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n      <InputBase\r\n        id=\"searchCategory\"\r\n        className={classes.input}\r\n        placeholder=\"Search Gif\"\r\n        onChange={handleChange}\r\n        inputProps={{ \"aria-label\": \"search gifs\" }}\r\n        value={inputValue}\r\n        variant=\"outlined\"\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  handleAdd: PropTypes.func,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function GifElement({ img }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const height = \"300px\";\r\n  const width = \"300px\";\r\n  return (\r\n    <Card style={{ width: width, minHeight: height, margin: \"16px\" }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {img.type}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={img.title}\r\n      />\r\n      <CardMedia\r\n        image={img.img}\r\n        style={{\r\n          height: img.height + \"px\",\r\n          width: img.width + \"px\",\r\n          margin: \"auto\",\r\n        }}\r\n        title={img.title}\r\n      />\r\n      <CardContent className={classes.detail}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          <a href={img.original} target=\"_blank\" rel=\"noreferrer\">\r\n            <Button size=\"small\">See Full Size</Button>\r\n          </a>\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Source:</Typography>\r\n          <Typography paragraph>\r\n            <a href={img.source} target=\"_blank\" rel=\"noreferrer\">\r\n              Click here to view more\r\n            </a>\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url =\r\n    \"https://api.giphy.com/v1/gifs/search?api_key=KCDBakFHx67sZY3ZogVnudMlcvHtOg7t&q=\" +\r\n    category +\r\n    \"&limit=10\";\r\n  try {\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        img: img.images.fixed_height.url,\r\n        height: img.images.fixed_height.height,\r\n        width: img.images.fixed_height.width,\r\n        source: img.source_post_url,\r\n        type: img.type.substr(0, 1).toUpperCase(),\r\n        original: img.images.original.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GifElement from \"./GifElement.js\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nconst GifElements = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h4>{category}</h4>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n      <div className=\"grid\">\r\n        {images.map((img) => (\r\n          <GifElement key={img.id} img={img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifElements.propTypes = {\r\n  category: PropTypes.string,\r\n};\r\n\r\nexport default GifElements;\r\n//  <AdvancedGridList images={images} />\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }));\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifElements from \"./components/GifElements\";\r\n\r\nconst GifExpertApp = (props) => {\r\n  const [categories, setCategories] = useState([\"Chinchilla\"]);\r\n\r\n  const handleSubmit = (value) => {\r\n    if (value.length > 2) {\r\n      //setCategories([...categories, value]);\r\n      setCategories([value]);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <AddCategory handleAdd={handleSubmit} category={categories} />\r\n\r\n      {categories.map((el) => {\r\n        return <GifElements key={el} category={el} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst app = () => (\n  <>\n    <CssBaseline />\n    <GifExpertApp />\n  </>\n);\n\nrender(app(), document.getElementById(\"root\"));\n"],"sourceRoot":""}